#!/bin/bash

idir="third_party_build"
mkdir -p $idir/

# libsodium :
# - 2 versions will be benchmarked: static and static with assembly disabled
# - from the help of libsodium configure regarding --disable-asm option:
#   "Do not compile assembly code -- As a side effect,
#    this disables CPU-specific implementations on
#    non-Windows platforms."
# - symbols in libsodium.a will be renamed to avoid conflicts with supercop
#
# The previous description applies to all libraries that benchmarked.

rename_lib()
{
  libname=$1
  (cd $idir/ && \
    nm $libname.a | grep " T " | awk -v name="$libname" '{print $3" "name"_"$3}' > symbols_to_rename && \
    objcopy --redefine-syms=symbols_to_rename $libname.a && \
    rm symbols_to_rename
  )
}

if [ "$#" -eq 0 ]; then

  # boring ssl
  (mkdir -p third_party/boringssl/build/ && \
   cd third_party/boringssl/build/ && \
   export CC=/usr/local/bin/gcc &&  \
   export CXX=/usr/local/bin/g++ && \
   cmake .. && \
   make && \
   cp crypto/libcrypto.a ../../../$idir/boringssl_static.a
  )
  rename_lib boringssl_static;

  # libsodium static
  (cd third_party/libsodium/ && \
    make distclean && ./configure --enable-static && make && make check && \
    cp src/libsodium/.libs/libsodium.a ../../$idir/libsodium_static.a
  )
  rename_lib libsodium_static;


  # libsodium static_disable_asm
  (cd third_party/libsodium/ && \
    make distclean && ./configure --enable-static --disable-asm && make && make check && \
    cp src/libsodium/.libs/libsodium.a ../../$idir/libsodium_static_disable_asm.a
  )
  rename_lib libsodium_static_disable_asm;


  # openssl static
  (cd third_party/openssl/ && \
    make distclean && ./Configure no-shared linux-x86_64 && make && \
    cp libcrypto.a ../../$idir/openssl_static.a
  )
  rename_lib openssl_static;


  # openssl static no asm
  (cd third_party/openssl/ && \
    make distclean && ./Configure no-shared no-asm linux-x86_64 && make && \
    cp libcrypto.a ../../$idir/openssl_static_no_asm.a
  )
  rename_lib openssl_static_no_asm;


  # hacl-star : gcc and gcc_vec
  (cd third_party/hacl-star/ && \
    make clean-build && make build && \
    cp build/libhacl.a ../../$idir/hacl_star_gcc.a && \
    cp build/libhacl.a ../../$idir/hacl_star_gcc_vec.a
  )
  rename_lib hacl_star_gcc;
  rename_lib hacl_star_gcc_vec;

  exit
fi

# hacl-star : compcert (this should be run in a machine with ccomp, for instance by using third_party/compcert/Vagrantfile)
# to exec this part of the code call the script with an argument, for example: ./build 1
(cd third_party/hacl-star/snapshots/hacl-c-compcert && \
  cp ../../../../patch/hacl-star/Makefile .
  make clean && make libhacl.a && \ 
  cp libhacl.a ../../../../$idir/hacl_star_compcert.a
)
rename_lib hacl_star_compcert;

