#ifndef UTILS_MEMORY
#define UTILS_MEMORY

fn memcpy_u8(reg u64 dest src n)
{
  reg u64 i;
  reg u8 c;
  i = 0;
  while (i < n)
  { c = (u8)[src + i];
    (u8)[dest + i] = c;
    i += 1;
  }
}

fn memset_u8(reg u64 dest n, reg u8 c)
{
  reg u64 i;
  i = 0;
  while (i < n)
  { (u8)[dest + i] = c;
    i += 1;
  }
}

// same as memcpy_u8 but it also receives an offset to be applied to dest
fn memcpy_u8_do(reg u64 dest, inline int dest_offset, reg u64 src n)
{
  reg u64 i;
  reg u8 c;

  i = 0;
  while (i < n)
  { c = (u8)[src + i];
    (u8)[dest + dest_offset + i] = c;
    i += 1;
  }
}

#endif
