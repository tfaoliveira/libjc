#ifndef CRYPTO_SCALARMULT_X25519_REF4_REDUCE
#define CRYPTO_SCALARMULT_X25519_REF4_REDUCE

inline fn __ref4_reduce(reg u64[8] z) -> reg u64[4]
{
  reg u64 z8 r0 r38 rax h l;
  reg u64[4] r;
  reg bool cf;
  inline int i;

  r38 = 38;

	rax = z[4];
	h, l = rax * r38;
	r[0] = l;
	r[1] = h;

	rax = z[5];
	h, l = rax * r38;
	cf, r[1] += l;

  r[2] = #MOV(0);
	rax = z[6];
	_, r[2] += h + cf;
	h, l = rax * r38;
	cf, r[2] += l;

	r[3] = #MOV(0);
	rax = z[7];
	_, r[3] += h + cf;
	h, l = rax * r38;
	cf, r[3] += l;

	z8 = #MOV(0);
	_, z8  += h + cf;

	cf, r[0] += z[0];

  for i = 1 to 4 {
  	cf, r[i] += z[i] + cf;
	}

	_, z8 += 0 + cf;
	z8 *= 38;

  r0 = #MOV(0);

  cf, r[0] += z8;
  for i = 1 to 4 {
	    cf, r[i] += r0 + cf;
  }

	_, r0 += r0 + cf;

	r0 *= 38;
	r[0] += r0;

  return r;
}

#endif
