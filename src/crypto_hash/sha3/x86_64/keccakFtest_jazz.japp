#include "keccak2x.jazz"

//
// EXTERNAL INTERFACES
//


/**
  * A wrapper that exposes the [keccakF] function externaly. It is intended for
  * test purposes only, as it performs quite a bit of pre-processing (read/write
  * of the state, and initialization of round-constants).
  *
  * @param  Aptr		Pointer to the state.
  * @param  count		number of iterations
  */
export
fn keccakF2x_test_jazz(reg u64 Aptr, reg u64 count) {
  inline int i;
  stack u64[25] A;
  reg u64 t;
  stack u64 count_spill;
  stack u64[24] constantsA;
  constantsA = init_iotas();

  for i = 0 to 25 {
    t = [Aptr + i*8];
    A[i] = t;
  }
  while ( count > 0 ) {
    count_spill = count;
    A = keccakF(A, constantsA);
    count = count_spill;
    count -=1;
  }
  for i = 0 to 25 {
    t = A[i];
    [Aptr + i*8] = t;
  }
}


